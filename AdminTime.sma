/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <unixtime>
#include <fvault> 

#define PLUGIN "Godzinki Adminow"
#define VERSION "1.5"
#define AUTHOR "PANDA"

new const licznik[] = "PodliczeniaAdminow";

enum dane{
	bool:admin,
	nick[33],
	sid[30],
	naliczone
}
new gracz[33][dane], g_reset;

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_concmd("amx_admintime", "godzinki", ADMIN_BAN)
	set_task(60.0, "koniecMapy", .flags="d")	
	set_task(5.0, "cfg")
}

public client_putinserver(id){
	if(get_user_flags(id) & ADMIN_BAN){
		gracz[id][admin]=true;
		get_user_name(id, gracz[id][nick], 32)
		get_user_authid(id, gracz[id][sid], 29)
		new data[60];
		if(fvault_get_data(licznik, gracz[id][sid], data, charsmax(data))){
			new nick1[33], czas[10];
			replace_all(data, charsmax(data), "#", " ");
			parse(data, nick1, charsmax(nick1), czas, charsmax(czas));
			gracz[id][naliczone]=str_to_num(czas);
		}
	}
}

public client_disconnected(id){
	if(gracz[id][admin]){
		new data[60];
		replace_all(gracz[id][nick], 32, " ", "\");
		formatex(data, charsmax(data), "%s#%d", gracz[id][nick], get_user_time(id)+gracz[id][naliczone]);
		fvault_set_data(licznik, gracz[id][sid], data)
		gracz[id][admin]=false;
	}
}

public cfg(){
	new vaultdata[3];
	get_vaultdata("ResetGodzinekAdminow", vaultdata, 2)
	g_reset = str_to_num(vaultdata)
}

public koniecMapy(){	
	new czas[16];
	get_time("%A-%H", czas, 15)
	if(equal(czas,"Sunday-04")){
		if(g_reset==0)
			reset_godzinki()
	}
	else set_vaultdata("ResetGodzinekAdminow", "0")
}

public usunreset(){
	set_vaultdata("ResetGodzinekAdminow", "1")
}

public reset_godzinki(){
	new Array:keys = ArrayCreate(39);
	new Array:datas = ArrayCreate(60);
	new Array:timestamps = ArrayCreate(10);
	new total = fvault_load(licznik, keys, datas, timestamps);
	new adreslogu[60];
	formatex(adreslogu, charsmax(adreslogu), "addons/amxmodx/logs/inne/godzinkiadminow.log");
	if(total){
		new nicki[40], pobrane[60], sidy[30], czasy[10], minuty;
		new iYear , iMonth , iDay , iHour , iMinute , iSecond;
		new hostname[64], hostip[32], CurrentTime[9], data[11];
		get_cvar_string("hostname", hostname, 63) 
		get_cvar_string("net_address", hostip, 31) 
		get_time("%d.%m.%Y",data,10);
		get_time("%H:%M:%S",CurrentTime,8)
		log_to_file(adreslogu, "--------------------------------------Czas Online Adminow--------------------------------------");
		log_to_file(adreslogu, "-----------------------------------Niedziela - Sobota (reset)------------------------------------");
		log_to_file(adreslogu, " Nazwa Serwera: %s", hostname);
		log_to_file(adreslogu, " IP: %s", hostip);
		log_to_file(adreslogu, "-----------------------------------------Lista Adminow------------------------------------------");
		for( new i = 0; i < total; i++ )
		{
			ArrayGetString(keys, i, sidy, 29);
			ArrayGetString(datas, i, pobrane, 59);
			UnixToTime(ArrayGetCell(timestamps, i), iYear, iMonth, iDay, iHour, iMinute, iSecond, UT_TIMEZONE_SERVER);
			replace_all(pobrane, charsmax(pobrane), "#", " ");
			parse(pobrane, nicki, charsmax(nicki), czasy, charsmax(czasy));
			minuty=str_to_num(czasy);
			replace_all(nicki, 39, "\", " ");
		    
			log_to_file(adreslogu, "%d. %s, SID: %s, %d minut, ostatnio: %d.%d %d:%s%d", i+1, nicki, sidy, minuty/60, iDay, iMonth, iHour, iMinute<10 ? "0" : "", iMinute);
		}
		log_to_file(adreslogu, "---------------------------------------------------------------------------------------------------");
		log_to_file(adreslogu, "Automatyczny reset data: %s Godzina: %s", data, CurrentTime);
		log_to_file(adreslogu, "---------------------------------------------------------------------------------------------------");
	}
	else log_to_file(adreslogu, "------------------------------------------Brak danych----------------------------------------------");
	
	fvault_clear(licznik);
	usunreset();
	for(new i=1; i<=33; i++){
		if(!is_user_connected(i) || !gracz[i][admin]) return;
		gracz[i][naliczone]=0;
	}
}

public godzinki(id, level, cid){
	if(!(get_user_flags(id) & ADMIN_BAN)){
		console_print(id, "Nie mozesz uzyc tej komendy");
		return PLUGIN_HANDLED;
	}
	new Array:keys = ArrayCreate(39);
	new Array:datas = ArrayCreate(60);
	new Array:timestamps = ArrayCreate(10);
	new total = fvault_load(licznik, keys, datas, timestamps);
	if(total){
		new nicki[40], pobrane[60], sidy[30], czasy[10], minuty;
		new iYear , iMonth , iDay , iHour , iMinute , iSecond;
		new hostname[64], hostip[32], CurrentTime[9], data[11];
		get_cvar_string("hostname", hostname, 63) 
		get_cvar_string("net_address", hostip, 31) 
		get_time("%d.%m.%Y",data,10);
		get_time("%H:%M:%S",CurrentTime,8)
		client_print_color(id, print_chat, "^4Wykonano wydruk w konsoli ^3CZAS ADMINOW ONLINE");
		console_print(id, "--------------------------------------Czas Online Adminow--------------------------------------");
		console_print(id, "-----------------------------------Niedziela - Sobota (reset)------------------------------------");
		console_print(id, " Nazwa Serwera: %s", hostname);
		console_print(id, " IP: %s", hostip);
		console_print(id, "-----------------------------------------Lista Adminow------------------------------------------");
		for( new i = 0; i < total; i++ )
		{
			ArrayGetString(keys, i, sidy, 29);
			ArrayGetString(datas, i, pobrane, 59);
			UnixToTime(ArrayGetCell(timestamps, i), iYear, iMonth, iDay, iHour, iMinute, iSecond, UT_TIMEZONE_SERVER);
			replace_all(pobrane, charsmax(pobrane), "#", " ");
			parse(pobrane, nicki, charsmax(nicki), czasy, charsmax(czasy));
			minuty=str_to_num(czasy);
			replace_all(nicki, 39, "\", " ");
		    
			console_print(id, "%d. %s, SID: %s, %d minut, ostatnio: %d.%d %d:%s%d", i+1, nicki, sidy, minuty/60, iDay, iMonth, iHour, iMinute<10 ? "0" : "", iMinute);
		}
		console_print(id, "---------------------------------------------------------------------------------------------------");
		console_print(id, "Data zrobienia wydruku: %s Godzina: %s", data, CurrentTime);
		console_print(id, "---------------------------------------------------------------------------------------------------");
	}
	else console_print(id, "------------------------------------------Brak danych----------------------------------------------");
	
	return PLUGIN_HANDLED;
}
